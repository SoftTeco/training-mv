name: Kubernetes pods CD dev
on:
  workflow_dispatch:
    inputs:
      ns-extended-number:
        required: true
        type: string
        default: '010000'
      gh-host:
        required: true
        type: string
        default: 'softteco'

permissions:
      contents: read
      id-token: write
      packages: write

env:
  ENVIRONMENT: 'dev'
  ARM_CLIENT_ID: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.MAXVRBTSK_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.MAXVRBTSK_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.MAXVRBTSK_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.MAXVRBTSK_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.MAXVRBTSK_TENANT_ID }}

jobs:
  az-ghcr_login:
    runs-on: ubuntu-latest
    
    steps:
    - name: pre checkout
      uses: actions/checkout@v3

    - name: 'az cli login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
        tenant-id: ${{ secrets.MAXVRBTSK_TENANT_ID }}
        subscription-id: ${{ secrets.MAXVRBTSK_SUBSCRIPTION_ID }}
        
    - name: 'azure cli script'
      uses: azure/CLI@v1
      with:
        azclientversion: latest
        inlineScript: |
          az account show
          az group list

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: 'ghcr.io'
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

  environment_deploy_mysql:
    runs-on: ubuntu-latest
    needs: az-ghcr_login
    steps:
    - name: pre checkout
      uses: actions/checkout@v3
      
    - name: Build kubernetes deployment mysql / init
      working-directory: ./terraform/kubernetes/mysql
      run: terraform init

    - name: Build kubernetes deployment mysql / plan
      working-directory: ./terraform/kubernetes/mysql
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_DEV }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_DEV }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_DEV }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
      run: |
        terraform workspace new ${ENVIRONMENT}
        terraform plan --var-file="terraform.tfvars" -var "mysql-user=${DB_USER}" -var "mysql-password=${DB_PASSWORD}" -var "mysql-name=${DB_NAME}" -var "ns-extended-number=${NAMESPACE_EXTENDED_NUMBER}" -out=plan-${ENVIRONMENT} -lock=false

    - name: Build kubernetes deployment mysql / apply
      working-directory: ./terraform/kubernetes/mysql
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_DEV }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_DEV }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_DEV }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
      run: |
        terraform workspace select ${ENVIRONMENT}
        terraform apply -auto-approve "plan-${ENVIRONMENT}"

  environment_deploy_wordpress:
    runs-on: ubuntu-latest
    needs: [az-ghcr_login,environment_deploy_mysql]
    steps:
    - name: pre checkout
      uses: actions/checkout@v3
      
    - name: Build kubernetes deployment wordpress / init
      working-directory: ./terraform/kubernetes/wordpress
      run: terraform init

    - name: Build kubernetes deployment wordpress / plan
      working-directory: ./terraform/kubernetes/wordpress
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_DEV }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_DEV }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_DEV }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.MAXVRBTSK_GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
        AZURE_CLIENT_SECRET: ${{ secrets.MAXVRBTSK_CLIENT_SECRET}}
        AZURE_CLIENT_ID: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
        AZURE_STORAGEACCOUNT_KEY: ${{ secrets.MAXVRBTSK_AZURE_STORAGEACCOUNT_KEY }}
      run: |
        terraform workspace new ${ENVIRONMENT}
        terraform plan --var-file="terraform.tfvars" -var "azure-storageaccount-key=${AZURE_STORAGEACCOUNT_KEY}" -var "azure-client-id=${AZURE_CLIENT_ID}" -var "azure-client-secret=${AZURE_CLIENT_SECRET}" -var "mysql-user=${DB_USER}" -var "mysql-password=${DB_PASSWORD}" -var "mysql-name=${DB_NAME}" -var "gh-access-token=${GITHUB_CONNECT_TOKEN}" -var "docker-config-ghcr-auth=${DOCKER_CONFIG_GHCR_AUTH}" -var "ns-extended-number=${NAMESPACE_EXTENDED_NUMBER}" -out=plan-${ENVIRONMENT} -lock=false

    - name: Build kubernetes deployment wordpress / apply
      working-directory: ./terraform/kubernetes/wordpress
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_DEV }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_DEV }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_DEV }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.MAXVRBTSK_GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
        AZURE_CLIENT_SECRET: ${{ secrets.MAXVRBTSK_CLIENT_SECRET}}
        AZURE_CLIENT_ID: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
        AZURE_STORAGEACCOUNT_KEY: ${{ secrets.MAXVRBTSK_AZURE_STORAGEACCOUNT_KEY }}
      run: |
        terraform workspace select ${ENVIRONMENT}
        terraform apply -auto-approve "plan-${ENVIRONMENT}"

  environment_deploy_front-end:
    runs-on: ubuntu-latest
    needs: [az-ghcr_login,environment_deploy_mysql,environment_deploy_wordpress]
    steps:
    - name: pre checkout
      uses: actions/checkout@v3
      
    - name: Build kubernetes deployment front-end / init
      working-directory: ./terraform/kubernetes/front-end
      run: terraform init

    - name: Build kubernetes deployment front-end / plan
      working-directory: ./terraform/kubernetes/front-end
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        GITHUB_CONNECT_TOKEN: ${{ secrets.MAXVRBTSK_GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
      run: |
        terraform workspace new ${ENVIRONMENT}
        terraform plan --var-file="terraform.tfvars" -var "gh-access-token=${GITHUB_CONNECT_TOKEN}" -var "docker-config-ghcr-auth=${DOCKER_CONFIG_GHCR_AUTH}" -var "ns-extended-number=${NAMESPACE_EXTENDED_NUMBER}" -out=plan-${ENVIRONMENT} -lock=false

    - name: Build kubernetes deployment front-end / apply
      working-directory: ./terraform/kubernetes/front-end
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}
        GITHUB_CONNECT_TOKEN: ${{ secrets.MAXVRBTSK_GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}
      run: |
        terraform workspace select ${ENVIRONMENT}
        terraform apply -auto-approve "plan-${ENVIRONMENT}"
