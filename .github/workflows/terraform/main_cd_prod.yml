name: Kubernetes pods CD prod
on:
  workflow_dispatch:
    inputs:
      js_image_prod:
        required: true
        type: string
        default: '2023.02.28.14.16.01-4292369971'
      wp_image_prod:
        required: true
        type: string
        default: '2023.02.10.14.23.00-4143421464'
      namespace_extended_number:
        required: true
        type: string
        default: '010000'
      runner_container_ip:
        required: true
        type: string
        default: '172.17.0.0'

jobs:
  environment_deploy:
    runs-on:
      - self-hosted
    steps:
    - uses: actions/checkout@v2

    - name: Build kubernetes deployment / init
      working-directory: ./terraform/kubernetes
      run: terraform init

    - name: Build kubernetes deployment / plan
      working-directory: ./terraform/kubernetes
      env:
        TF_VAR_replicas: 2
        TF_VAR_environment: 'prod'
        TF_VAR_github_host: 'isostheneia94'
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_PROD }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_PROD }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_PROD }}
        TF_VAR_wp_image: ${{ inputs.wp_image_prod }}
        TF_VAR_js_image: ${{ inputs.js_image_prod }}
        CLIENT_CERTIFICATE: ${{ secrets.K8S_CLIENT_CERTIFICATE }}
        CLIENT_KEY: ${{ secrets.K8S_CLIENT_KEY }}
        CLUSTER_CA_CERTIFICATE: ${{ secrets.K8S_CLUSTER_CA_CERTIFICATE_2 }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.GH_TOKEN }}
        TF_VAR_namespace_extended_name_number: ${{ inputs.namespace_extended_number}}
        HOST: ${{ secrets.K8S_HOST_ADDRESS }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        TF_VAR_wp_deploy_port: 8000
        TF_VAR_wp_target_port: 8000
        TF_VAR_js_deploy_port: 3000
        TF_VAR_js_target_port: 3000
        TF_VAR_mysql_deploy_port: 3306
        TF_VAR_mysql_target_port: 3306
        TF_VAR_runner_container_ip: ${{ inputs.runner_container_ip }}
      run: terraform plan -var "db_user=${DB_USER}" -var "db_password=${DB_PASSWORD}" -var "db_name=${DB_NAME}" -var "client_certificate=${CLIENT_CERTIFICATE}" -var "client_key=${CLIENT_KEY}" -var "cluster_ca_certificate=${CLUSTER_CA_CERTIFICATE}" -var "github_access_token=${GITHUB_CONNECT_TOKEN}" -var "host=${HOST}" -var "docker_config_ghcr_auth=${DOCKER_CONFIG_GHCR_AUTH}"

    - name: Build kubernetes deployment / apply
      working-directory: ./terraform/kubernetes
      env:
        TF_VAR_replicas: 2
        TF_VAR_environment: 'prod'
        TF_VAR_github_host: 'isostheneia94'
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_PROD }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_PROD }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_PROD }}
        TF_VAR_wp_image: ${{ inputs.wp_image_prod }}
        TF_VAR_js_image: ${{ inputs.js_image_prod }}
        CLIENT_CERTIFICATE: ${{ secrets.K8S_CLIENT_CERTIFICATE }}
        CLIENT_KEY: ${{ secrets.K8S_CLIENT_KEY }}
        CLUSTER_CA_CERTIFICATE: ${{ secrets.K8S_CLUSTER_CA_CERTIFICATE_2 }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.GH_TOKEN }}
        TF_VAR_namespace_extended_name_number: ${{ inputs.namespace_extended_number }}
        HOST: ${{ secrets.K8S_HOST_ADDRESS }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        TF_VAR_wp_deploy_port: 8000
        TF_VAR_wp_target_port: 8000
        TF_VAR_js_deploy_port: 3000
        TF_VAR_js_target_port: 3000
        TF_VAR_mysql_deploy_port: 3306
        TF_VAR_mysql_target_port: 3306
        TF_VAR_runner_container_ip: ${{ inputs.runner_container_ip }}
      run: terraform apply -auto-approve -var "db_user=${DB_USER}" -var "db_password=${DB_PASSWORD}" -var "db_name=${DB_NAME}" -var "client_certificate=${CLIENT_CERTIFICATE}" -var "client_key=${CLIENT_KEY}" -var "cluster_ca_certificate=${CLUSTER_CA_CERTIFICATE}" -var "github_access_token=${GITHUB_CONNECT_TOKEN}" -var "host=${HOST}" -var "docker_config_ghcr_auth=${DOCKER_CONFIG_GHCR_AUTH}"

