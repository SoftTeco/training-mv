name: Kubernetes pods CD prod
on:
  workflow_dispatch:
    inputs:
      existing_tf_workspace_prod:
        default: ''
      ns-extended-number:
        default: 010000
      gh-host:
        default: 'softteco'

env:
  ENVIRONMENT: 'prod'  
      
jobs:
  environment_deploy:
    runs-on:
      - ubuntu-latest
    needs: creating_tag
    steps:
    - name: az cli login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MAXVRBTSK_CLIENT_ID }}
        tenant-id: ${{ secrets.MAXVRBTSK_TENANT_ID }}
        subscription-id: ${{ secrets.MAXVRBTSK_SUBSCRIPTION_ID }}

    - name: azure cli script
      uses: azure/CLI@v1
      with:
        azclientversion: latest
        inlineScript: |
          az account show
          az group list
          
    - name: pre checkout
      uses: actions/checkout@v3
      
    - name: Build kubernetes deployment / init
      working-directory: ./terraform/kubernetes
      run: terraform init

    - name: Creating terraform workspace
      if: ${{ github.event.inputs.existing_tf_workspace_prod}}" == ''
      run: terraform workspace new ${ENVIRONMENT}

    - name: Selecting existing terraform workspace
      if: ${{ github.event.inputs.existing_tf_workspace_prod}}" != ''
      run: terraform workspace select ${ENVIRONMENT}

    - name: Build kubernetes deployment / plan
      working-directory: ./terraform/kubernetes
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}"
        TF_VAR_aks-name: "aks-WPDBJS-${ENVIRONMENT}"
        TF_VAR_rg-name: "RG-WPDBJS-${ENVIRONMENT}"
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_PROD }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_PROD }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_PROD }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number}}"
      run: terraform plan --var-file="terraform.tfvars" -var "mysql-user=${DB_USER}" -var "mysql-password=${DB_PASSWORD}" -var "mysql-name=${DB_NAME}" -var "gh-access-token=${GITHUB_CONNECT_TOKEN}" -var "docker-config-ghcr-auth=${DOCKER_CONFIG_GHCR_AUTH}" -var "ns-extended-number=${NAMESPACE_EXTENDED_NUMBER}" -out=plan-${ENVIRONMENT}

    - name: Build kubernetes deployment / apply
      working-directory: ./terraform/kubernetes
      env:
        TF_VAR_environment: $ENVIRONMENT
        TF_VAR_gh-host: ${{ github.event.inputs.gh-host}}"
        TF_VAR_aks-name: "aks-WPDBJS-${ENVIRONMENT}"
        TF_VAR_rg-name: "RG-WPDBJS-${ENVIRONMENT}"
        DB_USER: ${{ secrets.WORDPRESS_DB_USER_PROD }}
        DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD_PROD }}
        DB_NAME: ${{ secrets.WORDPRESS_DB_NAME_PROD }}
        GITHUB_CONNECT_TOKEN: ${{ secrets.GH_TOKEN }}
        DOCKER_CONFIG_GHCR_AUTH: ${{ secrets.DOCKER_CONFIG_GHCR_AUTH }}
        NAMESPACE_EXTENDED_NUMBER: ${{ github.event.inputs.ns-extended-number }}"
      run: terraform apply -auto-approve "plan-${ENVIRONMENT}"
