apiVersion: v1
kind: PersistentVolume
metadata:
  name: wp-db-js-mysql-pv-${ENVIRONMENT}
  labels:
    name: wp-db-js-mysql-pv-${ENVIRONMENT}
spec:
  storageClassName: standard
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/compose_data/mysql-${ENVIRONMENT}-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-db-js-mysql-pvc
  namespace: k8s-${ENVIRONMENT}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: wp-db-js-mysql-pv-${ENVIRONMENT}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wp-db-js-mysql-deployment
  namespace: k8s-${ENVIRONMENT}
  labels:
    app: mysql-application
spec:
  selector:
    matchLabels:
      project: wp-db-js-mysql-${ENVIRONMENT}
  replicas: 1 #${COUNT_REPLICAS}
  template:
    metadata:
      labels:
        project: wp-db-js-mysql-${ENVIRONMENT}
    spec:
      containers:
        - name: wp-db-js-mysql-${ENVIRONMENT}
          image: mysql:5.7
          env:
          - name : MYSQL_ROOT_PASSWORD
            value: ${DB_PASSWORD} 
          - name : MYSQL_DATABASE
            value: ${DB_NAME}
          - name : MYSQL_USER
            value: ${DB_USER}
          - name : MYSQL_PASSWORD
            value: ${DB_PASSWORD}
          volumeMounts:
          - mountPath: /var/lib/mysql
            name     : wp-db-js-mysql-pv-storage
      volumes:
      - name : wp-db-js-mysql-pv-storage
        persistentVolumeClaim:
          claimName: wp-db-js-mysql-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: wp-db-js-mysql-service
  namespace: k8s-${ENVIRONMENT}
  labels:
    env: ${ENVIRONMENT}
    owner: MaxVerbitskiy
spec:
  selector:
    project: wp-db-js-mysql-${ENVIRONMENT}
  ports:
    - name      : db-listener
      protocol  : TCP
      port      : 80
      targetPort: 3306
      nodePort  : ${MYSQL_K8S_PORT}
  type: NodePort